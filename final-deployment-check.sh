#!/bin/bash

echo "üöÄ Final Deployment Check for Skincare Event Queue Manager"
echo "=========================================================="

# Change to project directory
cd "$(dirname "$0")"

echo "üìÅ Current directory: $(pwd)"
echo ""

# Check if this is the right directory
if [ ! -f "package.json" ]; then
    echo "‚ùå Error: package.json not found. Are you in the correct directory?"
    exit 1
fi

echo "1Ô∏è‚É£ Checking project structure..."
echo "‚úÖ package.json found"

# Check key files exist
required_files=(
    "src/app/check-in/page.tsx"
    "src/app/check-in/success/page.tsx"
    "src/app/status/[guestId]/page.tsx"
    "src/lib/data-service.ts"
    "src/types/index.ts"
)

for file in "${required_files[@]}"; do
    if [ -f "$file" ]; then
        echo "‚úÖ $file"
    else
        echo "‚ùå $file - MISSING"
        exit 1
    fi
done

echo ""
echo "2Ô∏è‚É£ Checking dependencies..."
if npm list --depth=0 > /dev/null 2>&1; then
    echo "‚úÖ All dependencies installed"
else
    echo "‚ö†Ô∏è Installing dependencies..."
    npm install
fi

echo ""
echo "3Ô∏è‚É£ Running build test..."
if npm run build > /dev/null 2>&1; then
    echo "‚úÖ Build successful"
else
    echo "‚ùå Build failed. Running with output..."
    npm run build
    exit 1
fi

echo ""
echo "4Ô∏è‚É£ Checking key functionality..."

# Check that data service has required exports
if grep -q "export const addGuest" src/lib/data-service.ts && \
   grep -q "export const subscribeToGuestUpdates" src/lib/data-service.ts && \
   grep -q "export const getGuestById" src/lib/data-service.ts; then
    echo "‚úÖ Data service functions present"
else
    echo "‚ùå Missing required data service functions"
    exit 1
fi

# Check that check-in page captures guest ID
if grep -q "const guestId = await addGuest" src/app/check-in/page.tsx && \
   grep -q "router.push.*guestId=" src/app/check-in/page.tsx; then
    echo "‚úÖ Check-in flow captures and passes guest ID"
else
    echo "‚ùå Check-in flow missing guest ID handling"
    exit 1
fi

# Check that status page has notification support
if grep -q "Notification.requestPermission" src/app/status/*/page.tsx && \
   grep -q "subscribeToGuestUpdates" src/app/status/*/page.tsx; then
    echo "‚úÖ Status page has notification support"
else
    echo "‚ùå Status page missing notification functionality"
    exit 1
fi

echo ""
echo "5Ô∏è‚É£ Vercel deployment readiness..."

# Check if vercel.json exists (it shouldn't for Next.js 15)
if [ -f "vercel.json" ]; then
    echo "‚ö†Ô∏è vercel.json found - Next.js 15 uses auto-detection"
    echo "   Consider removing vercel.json for optimal deployment"
else
    echo "‚úÖ No vercel.json (good for Next.js 15 auto-detection)"
fi

# Check Next.js version
if grep -q '"next": ".*15\.' package.json; then
    echo "‚úÖ Next.js 15 detected"
else
    echo "‚ö†Ô∏è Next.js version may not be 15.x"
fi

echo ""
echo "6Ô∏è‚É£ Final checks..."

# Check that Firebase is completely removed
if grep -q "firebase" package.json || [ -f "firebase.json" ] || [ -f "src/lib/firebase" ]; then
    echo "‚ùå Firebase dependencies still present"
    exit 1
else
    echo "‚úÖ Firebase completely removed"
fi

# Check that mock data is removed from data service
if grep -q "const mockGuests" src/lib/data-service.ts; then
    echo "‚ùå Mock data still present in data service"
    exit 1
else
    echo "‚úÖ No hardcoded mock data"
fi

echo ""
echo "üéâ ALL CHECKS PASSED!"
echo ""
echo "üìã Deployment Summary:"
echo "   ‚úÖ Firebase dependencies removed"
echo "   ‚úÖ Real-time notifications implemented"
echo "   ‚úÖ Guest ID flow working"
echo "   ‚úÖ Status page with notifications"
echo "   ‚úÖ Build successful"
echo "   ‚úÖ Ready for Vercel deployment"
echo ""
echo "üöÄ To deploy to Vercel:"
echo "   1. vercel login"
echo "   2. vercel --prod"
echo ""
echo "üß™ To test locally:"
echo "   1. npm run dev"
echo "   2. Open http://localhost:3000/check-in"
echo "   3. Fill form and test complete flow"
echo "   4. Open test-notifications.html for notification testing"
echo ""
echo "üì± Key URLs after deployment:"
echo "   ‚Ä¢ Check-in: https://your-app.vercel.app/check-in"
echo "   ‚Ä¢ Admin Queue: https://your-app.vercel.app/admin/queue"
echo "   ‚Ä¢ Dashboard: https://your-app.vercel.app/admin/dashboard"
echo ""
echo "‚ú® Your Skincare Event Queue Manager is ready for production!"
